# === REQUIRED FIELDS ===

# Specify all the conditions and samples to bo analysed.
# Depending on the resquiggler used, Nanocompore expect different
# fields to be defined for all samples:
# - Uncalled4:
#   - Each sample should have the "bam" field set with a path
#     to a bam file containing the Uncalled4 resquiggling data.
# - Eventalign or Remora:
#   - Each sample should have the "db" field set with a path
#     to an SQLite database file produced by the subcommands
#     "eventalign_collapse" or "remora_resquiggle".
data:
  # Only two conditions are supported. There's
  # no limit to the number of samples per condition.
  # You can change the labels appropriately, but
  # note that all labels should be unique.
  condition1:
    sample1:
      bam: "/path/to/uncalled4.bam"
      db: "/path/to/collapsed_eventalign.sqlite"
    sample2:
      bam: "/path/to/uncalled4.bam"
      db: "/path/to/collapsed_eventalign.sqlite"
    # you can list as many samples as you want
  condition2:
    sample3:
      bam: "/path/to/uncalled4.bam"
      db: "/path/to/collapsed_eventalign.sqlite"
    sample4:
      bam: "/path/to/uncalled4.bam"
      db: "/path/to/collapsed_eventalign.sqlite"

# Which of the two conditions is the one that's
# depleted of modifications.
depleted_condition: condition1

# Reference genome/transcriptome in fasta format
fasta: "/path/to/reference.fa"

# The kit that was used for sequencing.
# Possible values: RNA002, RNA004
kit: "RNA004"

# Specify which resquiggler you have used for your data.
# Possible options are "eventalign", "uncalled4", and "remora".
resquiggler: 'eventalign'


# === OPTIONAL FIELDS ===


# Control how many worker processes to run and which
# computing device they should run on.
# The parameter should be a map of devices and number of worker processes.
# The accepted device values are: "cpu", "cuda", "cuda:N"
# For example, to use 4 worker processes on the CPU and
# 8 worker processes on each of the two available GPUs
# one can set the following:
#devices:
#  "cpu": 4
#  "cuda:0": 8
#  "cuda:1": 8

# What to do if the output directory already exists.
# Possible options are:
# - stop (default): stop the execution with an error.
# - overwrite: delete the existing directory and start from scratch.
# - continue: try to continue from where the previous execution left off.
#result_exists_strategy: "continue"

# Path to the output directory
#outpath: "nanocompore_output"

# Export a TSV file with the mean, median and sd for the intensity and dwell time
# for each condition and for each position. This can be used to evaluate the shift size
# for significant positions. By default it's set to False. However, even when it is
# disabled the data is still gathered and stored in the results database file.
#export_shift_stats: False

# Text prefix for all the files generated by Nanocompore
#outprefix: "out"

# GTF file with annotation of transcriptome used for mapping
#gtf: "/path/to/annotation.gtf"

# -- Transcript filtering options --

# Minimum coverage to consider a transcript for analysis.
#min_coverage: 30

# Transcripts with high coverage will be downsampled to this value.
#downsample_high_coverage: 5000

# Minimum length of a reference transcript to include it in the analysis.
#min_ref_length: 100

# -- Statistical testing options --

# A list of comparison methods to use.
# Currently supported methods are:
# - GAUSSIAN_MIXTURE_MODEL
# - KOLMOGOROV_SMIRNOV
# - MANN_WHITNEY
# - T_TEST
# - auto
# You can also use abbreviations:
# - GMM
# - KS
# - MW
# - TT
#comparison_methods:
#  - GAUSSIAN_MIXTURE_MODEL
#  - KOLMOGOROV_SMIRNOV

# When a modification passes through the motor protein
# it can change the movement speed of the molecule,
# affecting the dwell time measured for a downstream
# position. For m6A in the RNA002 kit this offset was
# measured to be 10 nt and for RNA004 12 nt.
# The default value is set to 0,
# which means that the motor dwell time effect will be
# ignored by Nanocompore.
#motor_dwell_offset: 0

# Sequence context for combining p-values.
# The value can be in the range [0, 4]
#sequence_context: 0

# Type of weights to use for combining p-values
#sequence_context_weights: 'uniform'

# Adjusted p-value threshold for reporting significant sites
#pvalue_threshold: 0.05

# Use logistic regression testing downstream of GMM method.
# This is the default.
#logit: True

# Use Anova test downstream of GMM method
#anova: False

# If True runtime warnings during the ANOVA tests don't raise an error
#allow_warnings: False

# --- Verbosity options ---

# Set the log level. Possible values are:
# "warning", "info", and "debug"
#log_level: 'info'

# Display a progress bar during execution
#progress: False

