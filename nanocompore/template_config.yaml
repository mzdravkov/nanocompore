# === REQUIRED FIELDS ===

# Specify all the conditions and samples to bo analysed.
# Depending on the resquiggler used, Nanocompore expect different
# fields to be defined for all samples:
# - Uncalled4:
#   - Each sample should have the "bam" field set with a path
#     to a bam file containing the Uncalled4 resquiggling data.
# - Eventalign:
#   - If you haven't ran nanocompore's eventalign_collapse
#     subcommand on your eventalign files yet, you can set
#     the "eventalign_tsv" field to a path to the TSV output
#     produced by Nanopolish or f5c. The preprocess command
#     will then collapse the files for you.
#   - If you already have ran eventalign_collapse, you can
#     provide the path to the collapsed database with the
#     "eventalign_db" parameter.
#   Note: the second option may be more efficient as you
#   can directly pipe Nanopolish/f5c to Nanocompore's
#   eventalign_collapse and avoid having to store the
#   raw eventalign TSV files, which are usually quite big.
data:
  # Only two conditions are supported
  condition1:
    sample1:
      bam: "/path/to/file.bam"
      pod5: "/path/to/file.pod5"
      eventalign_db: "/path/to/collapsed_eventalign.sqlite"
    sample2:
      bam: "/path/to/file.bam"
      pod5: "/path/to/file.pod5"
      eventalign_db: "/path/to/collapsed_eventalign.sqlite"
    # you can list as many samples as you want
  condition2:
    sample3:
      bam: "/path/to/file.bam"
      pod5: "/path/to/file.pod5"
      eventalign_db: "/path/to/collapsed_eventalign.sqlite"
    sample4:
      bam: "/path/to/file.bam"
      pod5: "/path/to/file.pod5"
      eventalign_db: "/path/to/collapsed_eventalign.sqlite"

# Which of the two conditions is the one that's
# depleted of modifications.
depleted_condition: condition1

# Reference genome/transcriptome in fasta format
fasta: "/path/to/reference.fa"

# The kit that was used for sequencing.
kit: "RNA004"

# Specify which resquiggler you have used for your data.
# Possible options are "remora" and "uncalled4".
resquiggler: 'remora'


# === OPTIONAL FIELDS ===


# Which computing device to use for the analysis (e.g. CPU vs GPU).
# This setting is used by the run subcommand.
# The accepted values are: "cpu", "cuda", "cuda:N"
# You can set the parameter using one of two methods:
# - Single value, e.g. "cpu" to use the CPU. In this case,
#   the number of worker processes will be determined by the
#   "nthreads" setting and all workers will use the device
#   specified here.
# - A map of devices and number of worker processes,
#   e.g. {"cpu": 4, "cuda:0": 8, "cuda:1": 8} to start 4
#   worker processes on the CPU and 8 worker processes on
#   each of the two GPUs. Note that if this method is used,
#   the "nthreads" parameter will be ignored.
# devices:
#   "cpu": 4
#   "cuda:0": 8
#   "cuda:1": 8


# Number of processes to use.
# Note: one process will be used as an orchestrator
# and will not be used to compare the samples.
# The number of worker processes is hence nthreads - 1.
# Note: if the number of worker processes are set for
# each device in the "devices" parameter "nthreads" will
# be ignored by the run subcommand.
# The default value is 2.
# nthreads: 2

# What to do if the output directory already exists.
# Possible options are:
# - stop (default): stop the execution with an error.
# - overwrite: delete the existing directory and start from scratch.
# - continue: try to continue from where the previous execution left off.
# result_exists_strategy: "continue"

# Path to the output directory
# outpath: "nanocompore_output"

# Path to where the preprocessed input data will be
# stored. If the value is an absolute path, the database
# will be written to the specified location. If it's just
# a file name (or a relative path) it will be used relative
# to "outpath".
# preprocessing_db: "/path/to/kmer_data.sqlite"

# Text prefix for all the files generated by Nanocompore
# outprefix: "out"

# BED file with annotation of transcriptome used for mapping
# bed: "/path/to/annotation.bed"

# -- Transcript filtering options --

# Minimum coverage to consider a transcript for analysis.
# min_coverage: 30

# Transcripts with high coverage will be downsampled to this value.
# downsample_high_coverage: 5000

# Minimum length of a reference transcript to include it in the analysis.
# min_ref_length: 100

# -- Statistical testing options --

# A list of comparison methods to use.
# Currently supported methods are:
# - GAUSSIAN_MIXTURE_MODEL
# - KOLMOGOROV_SMIRNOV
# - MANN_WHITNEY
# - T_TEST
# - auto
# You can also use abbreviations:
# - GMM
# - KS
# - MW
# - TT
# comparison_methods:
#   - GAUSSIAN_MIXTURE_MODEL
#   - KOLMOGOROV_SMIRNOV

# When a modification passes through the motor protein
# it can change the movement speed of the molecule,
# affecting the dwell time measured for a downstream
# position. For m6A in the RNA002/RNA004 kits this offset
# was measured to be 11 nt. The default value is set to 0,
# which means that the motor dwell time effect will be
# ignored by Nanocompore.
# motor_dwell_offset: 0

# Sequence context for combining p-values.
# The value can be in the range [0, 4]
# sequence_context: 0

# Type of weights to use for combining p-values
# sequence_context_weights: 'uniform'

# Adjusted p-value threshold for reporting significant sites
# pvalue_threshold: 0.05

# Use logistic regression testing downstream of GMM method.
# This is the default.
# logit: True

# Use Anova test downstream of GMM method
# anova: False

# If True runtime warnings during the ANOVA tests don't raise an error
# allow_warnings: False

# --- Verbosity options ---

# Set the log level. Possible values are:
# "warning", "info", and "debug"
# log_level: 'info'

# Display a progress bar during execution
# progress: False

